package tim18.ftn.uns.ac.rs.paymentconcentrator.service;

import java.util.Optional;
import java.util.UUID;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import tim18.ftn.uns.ac.rs.paymentconcentrator.exceptions.NotFoundException;
import tim18.ftn.uns.ac.rs.paymentconcentrator.model.User;
import tim18.ftn.uns.ac.rs.paymentconcentrator.repository.UserRepository;

@Service
public class UserService {

	@Autowired
	private UserRepository userRepository;

	/**
	 * Saves user to datebase. Id is autogenerated.
	 * 
	 * @param user
	 * @return saved user with id set
	 */
	public User saveUser(User user) {
		return userRepository.save(user);
	}
	
	public User findUserById(Integer id) throws NotFoundException {
		Optional<User> user = userRepository.findById(id);
		if (!user.isPresent()) {
			throw new NotFoundException(id, User.class.getSimpleName());
		}
		return user.get();
	}
	
	public String regenerateToken(Integer id) throws NotFoundException {
		
		User u = findUserById(id);
		String token = UUID.randomUUID().toString();
		u.setToken(token);
		userRepository.save(u);	
		return token;
	}
	
}
